#pragma checksum "C:\Users\neket\Desktop\CS.Money Parser\skins-parser\Views\Home\Test.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fef40848e1de24e485ca6d5944e5318dce325c33"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Test), @"mvc.1.0.view", @"/Views/Home/Test.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\neket\Desktop\CS.Money Parser\skins-parser\Views\_ViewImports.cshtml"
using CloudParser;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\neket\Desktop\CS.Money Parser\skins-parser\Views\_ViewImports.cshtml"
using CloudParser.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fef40848e1de24e485ca6d5944e5318dce325c33", @"/Views/Home/Test.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55d3547da1d0e10869644243750a0cf61b404562", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Test : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\neket\Desktop\CS.Money Parser\skins-parser\Views\Home\Test.cshtml"
  
    ViewData["Title"] = "CS.Money Parser";
    Layout = "~/Views/Shared/_CSM.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div style=""width:100%; margin:0 auto;"">
    <table class=""table table-striped table-bordered dt-responsive nowrap"" id=""example"" style=""width:100%;"">
        <thead>
            <tr>
                <th></th>
                <th>Name</th>
                <th>$Price</th>
                <th>Quality</th>
            </tr>
        </thead>
    </table>
</div>
<style>
    td.details-control {
        background: url('https://www.datatables.net/examples/resources/details_open.png') no-repeat center center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url('https://www.datatables.net/examples/resources/details_close.png') no-repeat center center;
    }

    .pagination {
        float: right;
    }

    .dataTables_filter {
        float: right;
    }

    .dataTables_filter {
        visibility: hidden;
    }

    .page-title {
        font-size: 2rem;
    }
</style>
<link href=""//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/cs");
            WriteLiteral("s/bootstrap.css\" rel=\"stylesheet\" />\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script src=""//cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js""></script>
    <script src=""//cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js""></script>
    <script src=""//cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js""></script>
    <script>
        $(document).ready(function () {
            var table = $('#example').DataTable({
                ""ajax"": ""/csm/getdata"",
                ""columns"": [
                    {
                        ""className"": 'details-control',
                        ""orderable"": true,
                        ""data"": null,
                        ""defaultContent"": ''
                    },
                    { ""data"": ""name"" },
                    { ""data"": ""price"" },
                    { ""data"": ""quality"" }
                ],
                ""order"": [[1, 'asc']],
                ""lengthMenu"": [[15, 25, 50, -1], [15, 25, 50, ""All""]],
                createdRow: function (row, data, index) {
                    if (dat");
                WriteLiteral(@"a.extn === '') {
                        var td = $(row).find(""td:first"");
                        td.removeClass('details-control');
                    }
                },
            });
            $(""#filterbox"").keyup(function () {
                table.search(this.value).draw();
            });

            $('#example tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                var rowData = row.data();

                //get index to use for child table ID
                var index = row.index();
                console.log(index);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(
                        '<table class=""child_table"" id");
                WriteLiteral(@" = ""child_details' + index + '"" cellpadding=""15"" cellspacing=""5"" border=""0"" style=""padding-left:50px; width:100%;"">' +
                        '<thead><tr><th></th><th>$Price</th><th>Float</th><th>Date</th></tr></thead><tbody>' +
                        '</tbody></table>').show();
                    var childTable = $('#child_details' + index).DataTable({
                        ""language"": {
                            ""emptyTable"": ""No data available in table""
                        },
                        ""searching"": false,
                        ""paging"": false,
                        ajax: function (data, callback, settings) {
                            $.ajax({
                                url: ""/csm/sells/"" + rowData.customeId
                            }).then(function (json) {
                                var data = json;
                                data = data.data;

                                var display = [];
                                for (d = 0; d <");
                WriteLiteral(@"= 15; d++) {
                                    if (data[d].position == rowData.position) {
                                        display.push(data[d]);
                                    }
                                }
                                callback({ data: display });

                            });
                        },
                        columns: [
                            {
                                ""orderable"": false,
                                ""data"": null,
                                ""defaultContent"": ''
                            },
                            { ""data"": ""custom_price"" },
                            { ""data"": ""floatvalue"" },
                            {
                                ""data"": ""update_time"",
                                ""type"": ""date "",
                                ""render"": function (value) {
                                    if (value === null) return """";
                                  ");
                WriteLiteral(@"  return moment(value).format('DD/MM/YYYY');
                                }
                            }
                        ],
                        destroy: true,
                    });
                    tr.addClass('shown');
                }
            });
        });
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
